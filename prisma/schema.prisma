// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Testimonial {
  id          Int      @id @default(autoincrement())
  author      String   @db.VarChar(64)
  description String   @db.VarChar(1024)
  active      Boolean  @default(true)
  created_at  DateTime @default(now())

  testimonial_video TestimonialVideo?

  @@map("testimonials")
}

model TestimonialVideo {
  id         Int      @id @default(autoincrement())
  link       String
  active     Boolean  @default(true)
  created_at DateTime @default(now())

  testimonial_id Int         @unique
  testimonial    Testimonial @relation(fields: [testimonial_id], references: [id])

  @@map("testimonial_videos")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(128)
  description String   @db.VarChar(1024)
  active      Boolean  @default(true)
  created_at  DateTime @default(now())

  products Product[]

  @@map("categories")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(128)
  description String   @db.VarChar(512)
  active      Boolean  @default(true)
  created_at  DateTime @default(now())

  Category      Category?      @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  ProductImages ProductImage[]

  @@map("products")
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  path       String
  created_at DateTime @default(now())

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@map("product_images")
}
